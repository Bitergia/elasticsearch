cluster.name: bitergia_elasticsearch

#transport.tcp.port : 9310
http.bind_host: _eth0:ipv4_
network.host: _eth0:ipv4_

readonlyrest:
    enable: true
    response_if_req_forbidden: <h1>Forbidden</h1>

    access_control_rules:

    - name: "::kibana access::"
#      groups: ["kibana"]
      auth_key: kibana:kibana
      type: allow
      verbosity: error # don't log successful request
      indices: [".kibana"]

    - name: "::RO KIBANA (anonymous)::"
      type: allow
      kibana_access: ro
      indices: ["*"]

    - name: "::RO ES (client)::"
#      groups: ["client"]
      auth_key: client:client
      type: allow
#      methods: GET, POST, PUT
      actions: ["indices:data/read/*"]
      indices: ["*"]

    - name: "::RW KIBANA (client)::"
#      groups: ["client"]
      auth_key: client:client
      type: allow
      kibana_access: rw
#      methods: GET, POST, PUT
      indices: [".kibana"]

    - name: "::RW ES & KIBANA (bitergia)::"
#      groups: ["admin"]
      auth_key: bitergia:bitergia
      type: allow
#      actions: ["cluster:admin/*"]
#      actions: ["cluster:monitor/*"]
#      actions: ["indices:admin/*"]
#      actions: ["indices:monitor/*"]
#      actions: ["indices:data/*"]
#      actions: ["internal:indices/*"]
      indices: ["*"]

    users:

    - username: kibana
      auth_key: kibana # auth_key is good for testing but replace it with auth_key_sha1 for production!
      groups: ["kibana"]

    - username: bitergia
      auth_key: bitergia # auth_key is good for testing but replace it with auth_key_sha1 for production!
      groups: ["admin"]

    - username: client
      auth_key: client # auth_key is good for testing but replace it with auth_key_sha1 for production!
      groups: ["client"]
